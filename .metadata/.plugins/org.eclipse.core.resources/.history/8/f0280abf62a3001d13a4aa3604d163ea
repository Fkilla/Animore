package com.zerock.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.zerock.domain.Criteria;
import com.zerock.domain.MemberVO;
import com.zerock.domain.PassFindVO;
import com.zerock.mapper.MemberMapper;

import lombok.AllArgsConstructor;
import lombok.Setter;
import lombok.extern.log4j.Log4j;

@Log4j
@Service
@AllArgsConstructor
public class AdoptreservationServiceImpl implements AdoptreservationService {
	@Setter(onMethod_ = @Autowired)
	private MemberMapper mapper;


	@Override
	public List<MemberVO> getList() {
		log.info("get List.........");
		return mapper.getList();
	}
	
	@Override
	public void register(MemberVO member) {
		log.info("register....." + member);
		mapper.insert(member);
	}

	@Override
	public MemberVO get(String id) {
		log.info("get............." + id);
		return mapper.read(id);
	}

	@Override
	public boolean modify(MemberVO member) {
		log.info("modify........." + member);
		return mapper.update(member) == 1;
	}

	@Override
	public boolean remove(String id) {
		log.info("remove......." + id);
		return mapper.delete(id) == 1;
	}

	@Override
	public MemberVO idCheck(String id) {
		log.info("id check...........");
		return mapper.idCheck(id);
	}

	@Override
	public MemberVO login(MemberVO member) throws Exception{
		log.info("login..........");
		return mapper.login(member);
	}

	@Override
	public PassFindVO pass_find(PassFindVO vo) {
		log.info("pass find......");
		return mapper.pass_find(vo);
	}

	@Override
	public int getTotal(Criteria cri) {
		log.info("get total count");
		return mapper.getTotalCount(cri);
	}

	@Override
	public List<MemberVO> getList(Criteria cri) {
		log.info("get list with criteria: " + cri);
		return mapper.getListWithPaging(cri);
	}
}
